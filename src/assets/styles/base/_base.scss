::selection {
	background: $text-selection;
	color: var(--black);
}

html {
	height: 100%;
	width: 100%;
	box-sizing: border-box;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
}

*,
*:before,
*:after {
	box-sizing: inherit;
}

body {
	-webkit-font-smoothing: antialiased;
	@extend %font-body;
	position: relative;
	padding: 0;
	padding-bottom: 50px;
	margin: auto;
	background-color: var(--grey-light);
	background-color: #eeeeee;
	background-image: url("data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23bc3e31' fill-opacity='0.05' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E");
	font-weight: $font-weight-normal;
	font-variation-settings: 'wght' $font-weight-normal;
	line-height: 1.4;
	letter-spacing: -0.4px;
	color: var(--black);
	min-height: 100%;
	@include font-size(18px);

	@include mq(sm) {
		border-width: 12px;
		line-height: 1.5;
		@include font-size(20px);
	}
}

main {
	padding-bottom: $space-lg;
}

hr {
	margin-top: $space-lg;
	margin-bottom: $space-lg;
	border: 0;
	background-color: var(--grey-dark);
	height: 2px;

	@include mq(sm) {
		margin-top: $space-xl;
		margin-bottom: $space-xl;
	}
}

ul,
ol {
	list-style-type: none;
	margin: $space auto;

	li {
		margin-bottom: 0.25em;
		&::before {
			content: '\2022';
			color: var(--primary);
			@include font-size(26px);
			line-height: 0;
			display: inline-block;
			margin-left: -1em;
			width: 1em;
		}
	}

	ul,
	ol {
		margin: 0.5em auto;
	}

	&.unstyled {
		list-style-type: none;
		margin: 0;
		padding: 0;
		li:before {
			display: none;
		}
	}
}

img {
	display: block;
	max-width: 100%;
	height: auto;
}

picture {
	display: block;
	margin-bottom: $space-md;
}

figure {
	margin: 0 0 20px 0;
}

blockquote {
	margin-top: $space;
	margin-bottom: $space;
	padding: $space;
	border-left: 5px solid var(--primary);
	background-color: var(--primary-very-light);

	p {
		margin: 0;
	}

	&.muted {
		border-left: 5px solid var(--grey-medium);
		background-color: transparent;
	}

	cite {
		@include font-size(13px);
	}
}

:not(pre) {
	> code[class*='language-'],
	> code,
	> kbd,
	> samp {
		@extend %font-mono;
		@include font-size(14px);
		padding: 3px 5px;
		border-radius: 3px;
		color: var(--black);
		background-color: $inline-code;
		text-shadow: 0 1px 0 var(--white);

		@include mq(sm) {
			white-space: pre-wrap;
		}
	}
}

pre {
	display: block;
	border: 0;
	border-radius: 5px;
	line-height: 1.5;
	margin: $space auto $space;
	padding: 20px;
	word-break: break-all;
	word-wrap: break-word;
	overflow: scroll;

	@include mq(sm) {
		padding: 20px;
		overflow: auto;
	}

	code {
		background: transparent;
		padding: 0;
		text-shadow: none;
		box-shadow: none;
		border: 0;
	}
}

